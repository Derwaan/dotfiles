" loading plugin
call plug#begin('~/.local/share/nvim/plugged')

" Color schemes
Plug 'freeo/vim-kalisi'
Plug 'w0ng/vim-hybrid'
Plug 'bitterjug/vim-colors-bitterjug'
Plug 'jonathanfilip/vim-lucius'
Plug 'crusoexia/vim-monokai'
Plug 'jacoborus/tender.vim'
Plug 'pbrisbin/vim-colors-off'
Plug 'muellan/am-colors'
Plug 'blueshirts/darcula'

" NERDtree , tree explorer
Plug 'scrooloose/nerdtree'

" Syntastic 
Plug 'scrooloose/syntastic'

" PEP8
Plug 'nvie/vim-flake8'


" NERDtree git plugin, add git status in nerdtree bar
Plug 'Xuyuanp/nerdtree-git-plugin'

" Vim-airline, better vim lin
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'edkolev/tmuxline.vim'

" Editor settings enforcement
Plug 'editorconfig/editorconfig-vim'

" Tag bar, get an overview of the structure of the file
Plug 'majutsushi/tagbar'

" Markdown support 
Plug 'godlygeek/tabular'
Plug 'plasticboy/vim-markdown'

" ctrlp, finder
Plug 'ctrlpvim/ctrlp.vim'

" ack, amelioration of grep for vim
Plug 'mileszs/ack.vim'

" Collection of language package
Plug 'https://github.com/sheerun/vim-polyglot.git'

" Autoclose ({[]})
Plug 'https://github.com/Townk/vim-autoclose'

" Vim Node
Plug 'https://github.com/moll/vim-node'

" Javascript-Syntax
Plug 'https://github.com/jelera/vim-javascript-syntax'

" NERDCommenter
Plug 'https://github.com/scrooloose/nerdcommenter'

" Indentation in Phyton
Plug 'vim-scripts/indentpython.vim'

" YouCompleteMe
Plug 'https://github.com/Valloric/YouCompleteMe'

" Fold
Plug 'tmhedberg/SimpylFold' 


call plug#end()
" ---------------------------------------------
"  Configuration for NERD tree to work as expected
" Auto start NERD tree when opening a directory
autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | wincmd p | endif

" Auto start NERD tree if no files are specified
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | exe 'NERDTree' | endif

" Let quit work as expected if after entering :q the only window left open is NERD Tree itself
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

let NERDTreeShowHidden=1

" NERDCommenter
let g:NERDSpaceDelims = 1

" SimpyFold
let g:SimpylFold_docstring_preview=1



" YouCompleteMe configuration
" ===========================
let g:ycm_autoclose_preview_window_after_completion=1
" let g:ycm_auto_trigger = 0
" map <leader>g  :YcmCompleter GoTo<CR>


" Basic configuration
" ===================
" Change of the mapleader and set jk to esc
let mapleader=","
" inoremap jk <esc>

" Move vertically by visual line
nnoremap j gj
nnoremap k gk

" Move to the beginning(B)/end(E) of line
" nnoremap B ^
" nnoremap ^ <nop>
" nnoremap E $
" nnoremap $ <nop>

" Hightlighting matching search when searching
set hlsearch
" Search as character are typed
set incsearch 
" Set <leader><space> to clear hightlight of search
nnoremap <leader><space> :nohlsearch<CR>

" realtive number line
set number relativenumber

" Hightlight current line
" set cursorline

" Show matching parenthesis-like char
set showmatch

" Auto-completion for command menu
set wildmenu

" Mouse
set mouse=a

" Disable showmode since using vim-airline
set noshowmode

" file type recognition
filetype on
filetype plugin on
filetype indent on

" Tab
set tabstop=4
set shiftwidth=4

au BufNewFile,BufRead *.js, *.html, *.css
    \ set tabstop=2 |
    \ set softtabstop=2 |
    \ set shiftwidth=2

au BufNewFile,BufRead *.py
    \ set tabstop=4 |
    \ set softtabstop=4 |
    \ set shiftwidth=4 |
    \ set textwidth=79 |
    \ set expandtab |
    \ set autoindent |
    \ set fileformat=unix


" Syntax highlighting
syntax on
"let python_highlight_all=1

" Markdown settings
let g:vim_markdown_folding_disabled = 1

" Open new split to the right and below
set splitright
set splitbelow

" Use Ag (the silver searcher) instack of Ack
let g:ackprg = 'ag --nogroup --nocolor --column'

" Theme Color scheme settings
" ===========================

set bg=dark
colorscheme tender
let g:airline_theme = 'tender'
let g:airline_powerline_fonts = 1

" Personnal binding
" =================
" <leader>t to open NERDTree
map <leader>t :NERDTreeToggle<CR>
" <leader<b to open tagbar
map <leader>b :TagbarToggle<CR>

" Folding
set foldmethod=indent
set foldlevel=99
nnoremap <space> za

" TO DO List
" map <leader>n o_ 
" map <leader>c ^rx :r! date +" [\%H:\%M - \%d\\\%m\\\%y"<ENTER>kJA<Esc>:r! echo " \| $USER]"<ENTER>kJA<Esc>$

" When latex autocompile
" autocmd BufWritePost *.tex !pdflatex %
